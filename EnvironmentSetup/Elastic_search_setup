1. Ansible VPN
PLAY [vpn] ********************************************************************************************************************************************************************************************************************************

TASK [Gathering Facts] ********************************************************************************************************************************************************************************************************************
ok: [node01]
ok: [node03]
ok: [kibana01]
ok: [node02]

TASK [tinc : install epel-release (redhat)] ***********************************************************************************************************************************************************************************************
ok: [node01]
ok: [kibana01]
ok: [node02]
ok: [node03]

TASK [tinc : install tinc] ****************************************************************************************************************************************************************************************************************
ok: [node01]
ok: [node03]
ok: [kibana01]
ok: [node02]

TASK [tinc : create tinc systemd service file (redhat)] ***********************************************************************************************************************************************************************************
ok: [node01]
ok: [node03]
ok: [kibana01]
ok: [node02]

TASK [tinc : systemctl daemon-reload (redhat)] ********************************************************************************************************************************************************************************************
skipping: [node01]
skipping: [node02]
skipping: [node03]
skipping: [kibana01]

TASK [tinc : ensure tinc netname directory exists] ****************************************************************************************************************************************************************************************
ok: [node01]
ok: [kibana01]
ok: [node03]
ok: [node02]

TASK [tinc : create /etc/tinc/nets.boot file from template] *******************************************************************************************************************************************************************************
ok: [node01]
ok: [kibana01]
ok: [node03]
ok: [node02]

TASK [tinc : ensure tinc.conf contains connection to all other nodes] *********************************************************************************************************************************************************************
ok: [kibana01]
ok: [node01]
ok: [node03]
ok: [node02]

TASK [tinc : create tinc-up file] *********************************************************************************************************************************************************************************************************
ok: [node01]
ok: [node03]
ok: [kibana01]
ok: [node02]

TASK [tinc : create tinc-down file] *******************************************************************************************************************************************************************************************************
ok: [node01]
ok: [kibana01]
ok: [node03]
ok: [node02]

TASK [tinc : ensure tinc hosts file binds to physical ip address] *************************************************************************************************************************************************************************
changed: [node02]
changed: [node01]
changed: [node03]
changed: [kibana01]

TASK [tinc : ensure subnet ip address is properly set in tinc host file] ******************************************************************************************************************************************************************
changed: [node01]
changed: [node02]
changed: [node03]
changed: [kibana01]

TASK [tinc : check whether /etc/tinc/netname/hosts/inventory_hostname contains "-----END RSA PUBLIC KEY-----"] ****************************************************************************************************************************
changed: [node02]
changed: [node01]
changed: [node03]
changed: [kibana01]

TASK [tinc : delete private key and regenerate keypair if public key is absent from tinc hosts file] **************************************************************************************************************************************
ok: [node02]
ok: [node01]
ok: [node03]
ok: [kibana01]

TASK [tinc : create tinc private key (and append public key to tincd hosts file)] *********************************************************************************************************************************************************
changed: [node03]
changed: [node02]
changed: [node01]
changed: [kibana01]

TASK [tinc : fetch tinc hosts file after key creation] ************************************************************************************************************************************************************************************
changed: [kibana01]
changed: [node02]
changed: [node03]
changed: [node01]

TASK [tinc : sync the fetched tinc hosts files on each host] ******************************************************************************************************************************************************************************
changed: [node02]
changed: [node01]
changed: [node03]
changed: [kibana01]

RUNNING HANDLER [tinc : restart tinc] *****************************************************************************************************************************************************************************************************
changed: [kibana01]
changed: [node01]
changed: [node03]
changed: [node02]

RUNNING HANDLER [tinc : reload tinc] ******************************************************************************************************************************************************************************************************
changed: [node03]
changed: [node02]
changed: [node01]
changed: [kibana01]

TASK [tinc : ensure tinc is started] ******************************************************************************************************************************************************************************************************
 [WARNING]: Ignoring "pattern" as it is not used in "systemd"

 [WARNING]: Ignoring "pattern" as it is not used in "systemd"

 [WARNING]: Ignoring "pattern" as it is not used in "systemd"

 [WARNING]: Ignoring "pattern" as it is not used in "systemd"

changed: [node01]
changed: [kibana01]
changed: [node03]
changed: [node02]

TASK [tinc : add nodes to /etc/hosts (ansible_inventory resolves to vpn_ip)] **************************************************************************************************************************************************************
changed: [node01] => (item=node01)
changed: [kibana01] => (item=node01)
changed: [node02] => (item=node01)
changed: [node03] => (item=node01)
changed: [node01] => (item=node02)
changed: [kibana01] => (item=node02)
changed: [node02] => (item=node02)
changed: [node03] => (item=node02)
changed: [node01] => (item=node03)
changed: [kibana01] => (item=node03)
changed: [node02] => (item=node03)
changed: [node03] => (item=node03)
changed: [node01] => (item=kibana01)
changed: [kibana01] => (item=kibana01)
changed: [node02] => (item=kibana01)
changed: [node03] => (item=kibana01)
 [WARNING]: Could not match supplied host pattern, ignoring: removevpn


PLAY [removevpn] **************************************************************************************************************************************************************************************************************************
skipping: no hosts matched

PLAY RECAP ********************************************************************************************************************************************************************************************************************************
kibana01                   : ok=20   changed=10   unreachable=0    failed=0   
node01                     : ok=20   changed=10   unreachable=0    failed=0   
node02                     : ok=20   changed=10   unreachable=0    failed=0   
node03                     : ok=20   changed=10   unreachable=0    failed=0   

[centos@elastic-dev-1 ansible-tinc]$ ping 10.1.0.1
PING 10.1.0.1 (10.1.0.1) 56(84) bytes of data.
64 bytes from 10.1.0.1: icmp_seq=1 ttl=64 time=0.019 ms
64 bytes from 10.1.0.1: icmp_seq=2 ttl=64 time=0.029 ms
64 bytes from 10.1.0.1: icmp_seq=3 ttl=64 time=0.043 ms
^C
--- 10.1.0.1 ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 2000ms
rtt min/avg/max/mdev = 0.019/0.030/0.043/0.010 ms
[centos@elastic-dev-1 ansible-tinc]$ 

#####Servers OS settings
Max open files - sudo su  
ulimit -n 65536 
su elasticsearch 
/etc/security/limits.conf
edit

On Linux systems, persistent limits can be set for a particular user by editing the /etc/security/limits.conf file. To set the maximum number of open files for the elasticsearch user to 65,536, add the following line to the limits.conf file:

elasticsearch  -  nofile  65536

Systemd configuration
edit

When using the RPM or Debian packages on systems that use systemd, system limits must be specified via systemd.

The systemd service file (/usr/lib/systemd/system/elasticsearch.service) contains the limits that are applied by default.

To override them, add a file called /etc/systemd/system/elasticsearch.service.d/override.conf (alternatively, you may run sudo systemctl edit elasticsearch which opens the file automatically inside your default editor). Set any changes in this file, such as:

[Service]
LimitMEMLOCK=infinity

Once finished, run the following command to reload units:

sudo systemctl daemon-reload

#Stop swappiness 
sudo swapoff -a

Another option available on Linux systems is to ensure that the sysctl value vm.swappiness is set to 1. This reduces the kernelâ€™s tendency to swap and should not lead to swapping under normal circumstances, while still allowing the whole system to swap in emergency conditions.

Virtual memory
edit

Elasticsearch uses a mmapfs directory by default to store its indices. The default operating system limits on mmap counts is likely to be too low, which may result in out of memory exceptions.

#Virtual memory
On Linux, you can increase the limits by running the following command as root:

sysctl -w vm.max_map_count=262144

To set this value permanently, update the vm.max_map_count setting in /etc/sysctl.conf. To verify after rebooting, run sysctl vm.max_map_count.


#Number of threads
Number of threads
edit

Elasticsearch uses a number of thread pools for different types of operations. It is important that it is able to create new threads whenever needed. Make sure that the number of threads that the Elasticsearch user can create is at least 4096.

This can be done by setting ulimit -u 4096 as root before starting Elasticsearch, or by setting nproc to 4096 in /etc/security/limits.conf.


##### My configuration
hosts: elasticsearch_master_data_nodes
  roles:
    - { role: elasticsearch, es_instance_name: "node1", es_config: { discovery.zen.ping.unicast.hosts: "node01, node02, node03", network.host: "_tun0_, _local_", cluster.name: "dev", discovery.zen.ping.multicast.enabled: false, http.port: 9200, transport.tcp.port: 9300, node.data: true, node.master: true, bootstrap.mlockall: true, path.data: /ext/elastic/data, path.logs: /ext/elastic/logs, bootstrap.memory_lock: true, discovery.zen.minimum_master_nodes: 2, bootstrap.memory_lock: true } }
  vars:
    es_major_version: "6.x"
    es_version: "6.4.2"
    es_heap_size: "3g"
    es_cluster_name: "dev"

    Open ports
    sudo iptables -I INPUT -p tcp -m tcp --dport 9200 -j ACCEPT
    sudo iptables -I INPUT -p tcp -m tcp --dport 9300 -j ACCEPT
